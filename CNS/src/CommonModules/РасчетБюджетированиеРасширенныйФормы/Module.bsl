		  
#Область ДанныеМенеджераРасчетаВДанныеФормы

Процедура СтрокаНачисленияВДанныеФормы(Организация, СтрокаПриемник, СтрокаИсточник, ВидыРасчетаИнфо, ПараметрыДляПроверкиРезультатаРаспределения)
	
	ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник); 
	
	ЗначенияРеквизитов = ВидыРасчетаИнфо.Получить(СтрокаИсточник.ВидНачисления);
	Если ЗначенияРеквизитов <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, ЗначенияРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетНачисленияВДанныеФормы(ТаблицыНачислений, ТаблицаИсточник, Организация, МесяцНачисления = Неопределено, ПозицииВставки = Неопределено ) Экспорт
	
	ВидыНачислений = Новый Массив;
	Для Каждого СтрокаИсточника Из ТаблицаИсточник Цикл
		Если ВидыНачислений.Найти(СтрокаИсточника.ВидНачисления)=Неопределено Тогда
			ВидыНачислений.Добавить(СтрокаИсточника.ВидНачисления);
		КонецЕсли;	
	КонецЦикла;
	
	ВидыРасчетаИнфо = Новый Соответствие; // БюджетированиеРасширенный.ИнформацияОВидахРасчета(ВидыНачислений);
	ПараметрыДляПроверкиРезультатаРаспределения = РасчетБюджетированиеРасширенный.ПараметрыДляПроверкиРезультатовРаспределенияНачислений();
	
	ПозицииФизическихЛиц = Новый Соответствие;
	СоответствиеОбходовФизическихЛиц = Новый Соответствие;	
	
	Если ПозицииВставки <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ТаблицыНачислений Цикл
			Если КлючИЗначение.Значение = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПозицииФизическихЛицТаблицы = Неопределено;
			Если Не ПозицииВставки.Свойство(КлючИЗначение.Ключ, ПозицииФизическихЛицТаблицы) Тогда
				ПозицииФизическихЛицТаблицы = Новый Соответствие;
				ПозицииВставки.Вставить(КлючИЗначение.Ключ, ПозицииФизическихЛицТаблицы);
			КонецЕсли;
			ПозицииФизическихЛиц.Вставить(КлючИЗначение.Ключ, ПозицииФизическихЛицТаблицы);
			СоответствиеОбходовФизическихЛиц.Вставить(КлючИЗначение.Ключ, Новый Соответствие);
		КонецЦикла;
	КонецЕсли;
	
	
	Для Каждого СтрокаНачисления Из ТаблицаИсточник Цикл

		ОбходТаблицыИдентификаторов = ОбходТаблицыИдентификаторов(СоответствиеОбходовФизическихЛиц["Начисления"], ПозицииФизическихЛиц["Начисления"], СтрокаНачисления.ФизическоеЛицо);
		СтрокаФормы = РасчетБюджетированиеРасширенныйКлиентСервер.СтрокаТаблицыПоНачальнойПозиции(ТаблицыНачислений["Начисления"], ОбходТаблицыИдентификаторов);
		СтрокаНачисленияВДанныеФормы(Организация, СтрокаФормы, СтрокаНачисления, ВидыРасчетаИнфо, ПараметрыДляПроверкиРезультатаРаспределения);
		
	КонецЦикла; 
	
	Для Каждого КлючИЗначение Из ТаблицыНачислений Цикл
		Если КлючИЗначение.Значение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		УдалитьНеактуальныеСтрокиФормы(КлючИЗначение.Значение, СоответствиеОбходовФизическихЛиц[КлючИЗначение.Ключ], ПозицииФизическихЛиц[КлючИЗначение.Ключ]);
	КонецЦикла;
	
КонецПроцедуры  

Процедура РасчетВзносыВДанныеФормы(ТаблицаПриемник, ТаблицаИсточник, ПозицииВставки = Неопределено) Экспорт
	
	ПозицииФизическихЛиц = Неопределено;
	СоответствиеОбходовФизическихЛиц = Неопределено;	
	
	Если ПозицииВставки <> Неопределено Тогда
		Если Не ПозицииВставки.Свойство("Взносы", ПозицииФизическихЛиц) Тогда
			ПозицииФизическихЛиц = Новый Соответствие;
			ПозицииВставки.Вставить("Взносы", ПозицииФизическихЛиц);
		КонецЕсли;
		СоответствиеОбходовФизическихЛиц = Новый Соответствие;
	КонецЕсли;
			
	Для Каждого СтрокаИсточник Из ТаблицаИсточник Цикл
		ОбходТаблицыИдентификаторов = ОбходТаблицыИдентификаторов(СоответствиеОбходовФизическихЛиц, ПозицииФизическихЛиц, СтрокаИсточник.ФизическоеЛицо);
		СтрокаФормы = РасчетБюджетированиеРасширенныйКлиентСервер.СтрокаТаблицыПоНачальнойПозиции(ТаблицаПриемник, ОбходТаблицыИдентификаторов);
		ЗаполнитьЗначенияСвойств(СтрокаФормы, СтрокаИсточник);
	КонецЦикла; 
	
	УдалитьНеактуальныеСтрокиФормы(ТаблицаПриемник, СоответствиеОбходовФизическихЛиц, ПозицииФизическихЛиц);
	
КонецПроцедуры

Функция ТаблицыНачисленийФормы() Экспорт

	ТаблицыНачислений = Новый Структура(
		"Начисления,
		|Взносы");
		
	Возврат ТаблицыНачислений;
	
КонецФункции

Процедура УдалитьНеактуальныеСтрокиФормы(ТаблицаПриемник, СоответствиеОбходовФизическихЛиц, ПозицииФизическихЛиц)
	
	Если СоответствиеОбходовФизическихЛиц = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПозицииФизическихЛиц Цикл
		ОбходТаблицыИдентификаторов = СоответствиеОбходовФизическихЛиц[КлючИЗначение.Ключ];
		Если ОбходТаблицыИдентификаторов = Неопределено Тогда
			ОбходТаблицыИдентификаторов = РасчетБюджетированиеРасширенныйКлиентСервер.НовыйОбходИдентификаторовТаблицы(КлючИЗначение.Значение);
		КонецЕсли;
		РасчетБюджетированиеРасширенныйКлиентСервер.УдалитьНеактуальныеСтрокиФормы(ТаблицаПриемник, ОбходТаблицыИдентификаторов);	
	КонецЦикла;
	
КонецПроцедуры

Функция ОбходТаблицыИдентификаторов(СоответствиеОбходовФизическихЛиц, ПозицииФизическихЛиц, ФизическоеЛицо)
	
	Если СоответствиеОбходовФизическихЛиц = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СоответствиеОбходовФизическихЛиц[ФизическоеЛицо] = Неопределено Тогда
		Если ПозицииФизическихЛиц[ФизическоеЛицо] = Неопределено Тогда
			Идентификаторы = Новый Массив;
			ОбходТаблицыИдентификаторов = РасчетБюджетированиеРасширенныйКлиентСервер.НовыйОбходИдентификаторовТаблицы(Идентификаторы);
			ПозицииФизическихЛиц.Вставить(ФизическоеЛицо, Идентификаторы);
		Иначе
			ОбходТаблицыИдентификаторов = РасчетБюджетированиеРасширенныйКлиентСервер.НовыйОбходИдентификаторовТаблицы(ПозицииФизическихЛиц[ФизическоеЛицо]);
		КонецЕсли;
		СоответствиеОбходовФизическихЛиц.Вставить(ФизическоеЛицо, ОбходТаблицыИдентификаторов);
	Иначе
		ОбходТаблицыИдентификаторов = СоответствиеОбходовФизическихЛиц[ФизическоеЛицо];
	КонецЕсли;
	
	Возврат ОбходТаблицыИдентификаторов;
		
КонецФункции

Процедура ДокументыРасчетПоказателейБюджетовПрогнозовДополнитьФорму(Форма, ОписаниеТаблицыВидовРасчета, ИмяПВР, ИмяКоманднойПанели = Неопределено, РегистрацияНачисленийДоступна = Истина, КонтролируемыеПоля = Неопределено, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь, ДокументСсылка = Неопределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРасчетБюджетированияРасширенная") Тогда
	     Возврат;
	КонецЕсли;
	
	БюджетированиеРасширенный.ВводНачисленийДополнитьФорму(Форма, ОписаниеТаблицыВидовРасчета, 2, ИмяПВР, РегистрацияНачисленийДоступна И ДобавлятьЭлементыФормы, ДобавлятьРеквизитыФормы, ОтложенноеИзменение, ДокументСсылка);
	
	Если РегистрацияНачисленийДоступна Тогда
		// Условное оформление
		//
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
