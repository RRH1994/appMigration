#Область СлужебныйПрограммныйИнтерфейс

// Создает описание расчетного документа.
// Структура с полями, которые содержат имена таблиц данных формы документа
//		НачисленияИмя
//		НачисленияПерерасчетИмя
//		НачисленияПоДоговорамИмя
//		УдержанияИмя
//		НДФЛИмя
//		ВзносыИмя
//		ПогашениеЗаймовИмя.
// 
Функция ОписаниеРасчетногоДокумента() Экспорт
	
	ПоляОписания = 
	"МесяцНачисленияИмя,
	|ПериодДействияВШапке,
	|ДатаНачалаИмя,
	|ДатаОкончанияИмя,
	|ВидРасчета,
	|Окончание,
	|ВидНачисленияВШапке,
	|ВидНачисленияИмя,
	|НачисленияИмя,
	|НачисленияКоманднаяПанельИмя,
	|ВзносыИмя,
	|ЕстьПрочиеНачисления,
	|ЗаполнятьПерерасчеты,
	|ЭтоРасчетПоказателейБюджетовПрогнозов,
	|ОбязательныеПоля,
	|ОписанияТаблиц";
	
	Описание = Новый Структура(ПоляОписания);
	Описание.МесяцНачисленияИмя = "МесяцНачисления";
	Описание.ВидНачисленияВШапке = Ложь;
	Описание.ПериодДействияВШапке = Истина;
	Описание.ЕстьПрочиеНачисления = Истина;
	Описание.ЭтоРасчетПоказателейБюджетовПрогнозов = Истина;
	Описание.ЗаполнятьПерерасчеты = Ложь;
	
	// Обязательные поля описываются в виде массива описаний.
	// Обязательное поле по умолчанию - Организация.
	Описание.ОбязательныеПоля = Новый Массив;
	Описание.ОбязательныеПоля.Добавить(ОписаниеОбязательногоПоляДокумента("Организация", "Объект.Организация"));
	Описание.ОбязательныеПоля.Добавить(ОписаниеОбязательногоПоляДокумента("ВидРасчета", "Объект.ВидРасчета")); 
	
	Описание.ОписанияТаблиц = Новый Структура;
	
	Возврат Описание;
	
КонецФункции

Функция ОписаниеТаблицыРасчета() Экспорт
	
	ОписаниеТаблицы = Новый Структура(
	"ИмяТаблицы,
	|ИмяРеквизитаВидНачисления,
	|СодержитПолеВидРасчета,
	|ИмяРеквизитаФизическоеЛицо,
	|НомерТаблицы,
	|ПутьКДанным,
	|ИмяРеквизитаДатаНачала,
	|ИмяРеквизитаДатаОкончания,
	|ИмяРеквизитаПериод,
	|ИмяПоляРезультат, 
	|СодержитПолеФизическоеЛицо, 
	|СодержитПолеИсходныйДокумент,
	|РаспределениеРезультатовЗависимыеТаблицы");
	
	ОписаниеТаблицы.СодержитПолеИсходныйДокумент = Ложь;
	
	ОписаниеТаблицы.ИмяТаблицы 						= "Начисления";
	ОписаниеТаблицы.ИмяРеквизитаВидНачисления 		= "ВидНачисления";
	ОписаниеТаблицы.СодержитПолеВидРасчета 			= Истина;
	ОписаниеТаблицы.ИмяРеквизитаФизическоеЛицо 		= "ФизическоеЛицо";
	ОписаниеТаблицы.НомерТаблицы 					= 0;
	ОписаниеТаблицы.ПутьКДанным 					= "Объект.Начисления";
	ОписаниеТаблицы.ИмяРеквизитаДатаНачала 			= "ДатаНачала";
	ОписаниеТаблицы.ИмяРеквизитаДатаОкончания 		= "ДатаОкончания";
	ОписаниеТаблицы.ИмяРеквизитаПериод 				= "МесяцНачисления";
	ОписаниеТаблицы.ИмяПоляРезультат 				= "Результат"; 
	ОписаниеТаблицы.РаспределениеРезультатовЗависимыеТаблицы = "";
	
	Возврат ОписаниеТаблицы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеОбязательногоПоляДокумента(ИмяПоля, ПутьКРеквизиту) Экспорт
	Возврат Новый Структура("ИмяПоля, ПутьКРеквизиту", ИмяПоля, ПутьКРеквизиту);
КонецФункции

Функция НовыйОбходИдентификаторовТаблицы(Идентификаторы) Экспорт
	
	ОбходТаблицыИдентификаторов = Новый Структура;
	ОбходТаблицыИдентификаторов.Вставить("Идентификаторы", Идентификаторы);
	ОбходТаблицыИдентификаторов.Вставить("Количество", Идентификаторы.Количество());
	ОбходТаблицыИдентификаторов.Вставить("ТекущаяПозиция", 0);
	
	Возврат ОбходТаблицыИдентификаторов;
	
КонецФункции

Функция СтрокаТаблицыПоНачальнойПозиции(ТаблицаИсточник, ОбходТаблицыИдентификаторов = Неопределено) Экспорт
	
	Если ОбходТаблицыИдентификаторов = Неопределено Тогда
		Возврат ТаблицаИсточник.Добавить();
	КонецЕсли;
	
	Если ОбходТаблицыИдентификаторов.ТекущаяПозиция >= ОбходТаблицыИдентификаторов.Количество Тогда
		Если ОбходТаблицыИдентификаторов.ТекущаяПозиция = 0 Тогда
			СтрокаФормы = ТаблицаИсточник.Добавить();
		Иначе
			ПредыдущийИдентификатор = ОбходТаблицыИдентификаторов.Идентификаторы[ОбходТаблицыИдентификаторов.ТекущаяПозиция - 1];
			ПредыдущаяСтрокаФормы = ТаблицаИсточник.НайтиПоИдентификатору(ПредыдущийИдентификатор);
			ПозицияВставки = ТаблицаИсточник.Индекс(ПредыдущаяСтрокаФормы) + 1;
			СтрокаФормы = ТаблицаИсточник.Вставить(ПозицияВставки);
		КонецЕсли;
		ОбходТаблицыИдентификаторов.Идентификаторы.Добавить(СтрокаФормы.ПолучитьИдентификатор());
	Иначе
		Идентификатор = ОбходТаблицыИдентификаторов.Идентификаторы[ОбходТаблицыИдентификаторов.ТекущаяПозиция];
		СтрокаФормы = ТаблицаИсточник.НайтиПоИдентификатору(Идентификатор);
	КонецЕсли;
	
	ОбходТаблицыИдентификаторов.ТекущаяПозиция = ОбходТаблицыИдентификаторов.ТекущаяПозиция + 1;
	Если СтрокаФормы = Неопределено Тогда
		УдалитьИдентификаторТаблицыФормы(ОбходТаблицыИдентификаторов);
		Возврат СтрокаТаблицыПоНачальнойПозиции(ТаблицаИсточник, ОбходТаблицыИдентификаторов);
	КонецЕсли;
	
	Возврат СтрокаФормы;
	
КонецФункции

Процедура УдалитьНеактуальныеСтрокиФормы(ТаблицаПриемник, ОбходТаблицыИдентификаторов) Экспорт
	
	Пока ОбходТаблицыИдентификаторов.ТекущаяПозиция < ОбходТаблицыИдентификаторов.Количество Цикл
		СтрокаФормы = СтрокаТаблицыПоНачальнойПозиции(ТаблицаПриемник, ОбходТаблицыИдентификаторов);
		ТаблицаПриемник.Удалить(СтрокаФормы);
		УдалитьИдентификаторТаблицыФормы(ОбходТаблицыИдентификаторов);
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьИдентификаторТаблицыФормы(ОбходТаблицыИдентификаторов)
	
	ОбходТаблицыИдентификаторов.ТекущаяПозиция = ОбходТаблицыИдентификаторов.ТекущаяПозиция - 1;
	ОбходТаблицыИдентификаторов.Идентификаторы.Удалить(ОбходТаблицыИдентификаторов.ТекущаяПозиция);
	ОбходТаблицыИдентификаторов.Количество = ОбходТаблицыИдентификаторов.Количество - 1;
	
КонецПроцедуры

Функция ПараметрыПолученияДанныхЗаполненияДокумента() Экспорт
	
	СтруктураПараметров = Новый Структура(
	"Организация, 
	|ДокументСсылка, 
	|Подразделение,
	|МестоВозникновенияЗатрат,
	|МесяцНачисления, 
	|ФизическиеЛица,
	|НачалоПериода,
	|ОкончаниеПериода, 
	|ВидРасчета,
	|ИсточникРасчета,
	|Сценарий,
	|ПозицииВставки,
	|ОписаниеДокумента, 
	|СодержимоеДокумента, 
	|ФизическиеЛицаПериодДействияПерерасчет,
	|");
	
	СтруктураПараметров.ПозицииВставки = Новый Структура;
	
	Возврат СтруктураПараметров;
	
КонецФункции

Процедура ОчиститьТаблицыДокумента(Форма, ОписаниеДокумента) Экспорт
	
	ИменаПолейИменТаблиц = Новый Массив;
	ИменаПолейИменТаблиц.Добавить("НачисленияИмя");
	ИменаПолейИменТаблиц.Добавить("ВзносыИмя");
	
	Для Каждого ИмяПоляИмениТаблицы Из ИменаПолейИменТаблиц Цикл
		Если ОписаниеДокумента[ИмяПоляИмениТаблицы] <> Неопределено Тогда
			Форма.Объект[ОписаниеДокумента[ИмяПоляИмениТаблицы]].Очистить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти