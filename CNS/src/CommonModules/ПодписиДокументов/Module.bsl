#Область ПрограммныйИнтерфейс

#Область ОписаниеПодписей

// Добавляет описание набора подписей объекта (документа) для организации.
//
// Параметры:
//  ОписаниеПодписей				 - ТаблицаЗначений	 - см. ОписаниеТаблицыПодписей.
//  СтрокаРолей						 - Строка			 - имена ролей, присутствующих в объекте, разделенные запятыми.
//  ПереопределяемыеИменаРеквизитов	 - Соответствие		 - имена реквизитов подписантов, где:
//  		* Ключ - Строка - имя роли
//  		* Значение - Структура - переопределяемые имена реквизитов, см. ОписаниеРеквизитовПодписанта.
//  ИмяРеквизитаОрганизация			 - Строка			 - имя реквизита объекта, который содержит Организацию, к которой относятся подключаемые роли.
//
Процедура ДобавитьОписаниеПодписейОрганизации(
	ОписаниеПодписей, 
	СтрокаРолей, 
	ПереопределяемыеИменаРеквизитов = Неопределено, 
	ИмяРеквизитаОрганизация = "Организация") Экспорт

	МассивРолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРолей, ",", Истина, Истина);
	МассивНеНайденныхРолей = Новый Массив;
	
	ОписаниеИменРеквизитов = ОписаниеИменПодписантовОбъекта(МассивРолей, ПереопределяемыеИменаРеквизитов);
	
	Для Каждого ИмяРоли Из МассивРолей Цикл
		ОписаниеИменРеквизитовРоли = ОписаниеИменРеквизитов.Получить(ИмяРоли);
		Если ОписаниеИменРеквизитовРоли = Неопределено Тогда
			МассивНеНайденныхРолей.Добавить(МассивРолей);
			Продолжить;
		КонецЕсли;
		
		ДобавитьОписаниеПодписи(ОписаниеПодписей, ОписаниеИменРеквизитовРоли, ИмяРоли, ИмяРеквизитаОрганизация);
	КонецЦикла; 
	
	Если МассивНеНайденныхРолей.Количество() > 0 Тогда
		Если МассивНеНайденныхРолей.Количество() = 1 Тогда
			ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Не найдено описания для подписей роли %1'"), 
					ИмяРоли);
		ИначеЕсли МассивНеНайденныхРолей.Количество() > 1 Тогда
			ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Не найдено описания для подписей ролей: %1'"), 
					СтрСоединить(МассивНеНайденныхРолей, ", "));
		КонецЕсли;
		
		ВызватьИсключение(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Структура, описывающая триаду имен реквизитов подписанта.
// 
// Возвращаемое значение:
//  Структура - Имена реквизитов подписанта.
//
Функция ОписаниеРеквизитовПодписанта() Экспорт

	Описание = Новый Структура(
		"ФизическоеЛицо, 
		|Должность, 
		|ОснованиеПодписи");

	Возврат Описание;

КонецФункции

// Формирует соответствие с описанием роли уполномоченного лица, подписывающего документы.
//
// Параметры:
//  ИмяРеквизитаФизическоеЛицо	 - Строка	 - имя реквизита документа, в котором хранится ссылка на ответственное лицо,
//  ИмяРеквизитаДолжность		 - Строка	 - имя реквизита документа, в котором хранится должность ответственного лица,
//  ИмяРеквизитаОснованиеПодписи - Строка	 - имя реквизита документа, в котором хранится основание полномочий ответственного лица,
//  ИмяРоли						 - Строка	 - Необязательный, имя роли ответственного лица,
//  	если не задано, принимается равным ИмяРеквизитаФизическоеЛицо.
// 
// Возвращаемое значение:
//  Соответствие - ключом выступает имя роли, а значением описание (см. ОписаниеРеквизитовПодписанта).
//
Функция ИменаРеквизитовРолиПодписанта(
	ИмяРеквизитаФизическоеЛицо, 
	ИмяРеквизитаДолжность, 
	ИмяРеквизитаОснованиеПодписи, 
	ИмяРоли = Неопределено) Экспорт

	СтруктураИменРеквизитов = ОписаниеРеквизитовПодписанта();
	
	СтруктураИменРеквизитов.ФизическоеЛицо = ИмяРеквизитаФизическоеЛицо;
	СтруктураИменРеквизитов.Должность = ИмяРеквизитаДолжность;
	СтруктураИменРеквизитов.ОснованиеПодписи = ИмяРеквизитаОснованиеПодписи;
	
	Если ИмяРоли = Неопределено Тогда
		ИмяРоли = ИмяРеквизитаФизическоеЛицо;
	КонецЕсли;
	
	ОписаниеРоли = Новый Соответствие;
	ОписаниеРоли.Вставить(ИмяРоли, СтруктураИменРеквизитов);
	
	Возврат ОписаниеРоли;
	
КонецФункции

// Возвращает пустую таблиц значений для описания имен реквизитов формы, относящихся к подписям документа.
//
// Возвращаемое значение:
//		Таблица значений - содержит следующие колонки:
//			* Организация		 - признак принадлежности к той или иной организации в форме (их может быть более одной).
//			* Ключ				 - имя роли подписывающего лица (например "Руководитель")
//			* ФизическоеЛицо	 - имя реквизита, содержащего подписанта (например "Директор")
//			* Должность			 - имя реквизита, содержащего должность подписанта (например "ДолжностьДиректора")
//			* ОснованиеПодписи	 - имя реквизита, содержащего текст основания подписи (например "ОснованиеПодписиДиректора")
//
Функция ОписаниеТаблицыПодписей() Экспорт
	
	ОписаниеПодписей = Новый ТаблицаЗначений;
	
	// Организация и имя роли
	ОписаниеПодписей.Колонки.Добавить("Организация", Новый ОписаниеТипов("Строка"));
	ОписаниеПодписей.Колонки.Добавить("РольПодписанта", Новый ОписаниеТипов("Строка"));
	// Триада реквизитов подписанта, см. ОписаниеРеквизитовПодписанта()
	ОписаниеПодписей.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("Строка"));
	ОписаниеПодписей.Колонки.Добавить("Должность", Новый ОписаниеТипов("Строка"));
	ОписаниеПодписей.Колонки.Добавить("ОснованиеПодписи", Новый ОписаниеТипов("Строка"));
	
	Возврат ОписаниеПодписей;
	
КонецФункции

// Дополняет поддерживаемые идентификаторы значений по умолчанию идентификаторами ответственных лиц организаций.
//
// Параметры:
//  ПоддерживаемыеИдентификаторы - Массив - идентификаторы заполняемых по умолчанию значений.
//
Процедура ДобавитьИдентификаторыОтветственныхРаботниковОрганизаций(ПоддерживаемыеИдентификаторы) Экспорт 
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПоддерживаемыеИдентификаторы, ПоддерживаемыеРеквизитыОтветственныхРаботниковОрганизаций());
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОписаниеПодписей

Функция ПредопределенныеИдентификаторыОписанийПодписей()
	Возврат ПодписиДокументовПовтИсп.ПредопределенныеИдентификаторыОписанийПодписей();
КонецФункции

Функция ПоддерживаемыеРеквизитыОтветственныхРаботниковОрганизаций()

	ПоддерживаемыеИдентификаторы = Новый Массив;
	
	МассивИдентификаторов = ПредопределенныеИдентификаторыОписанийПодписей();
	ПредопределенныеИдентификаторы = СоответствиеИдентификаторовИзМассиваИдентификаторов(МассивИдентификаторов);
	
	Для Каждого ОписаниеРеквизитовПодписанта Из ПредопределенныеИдентификаторы Цикл
		Для Каждого ОписаниеРеквизитаПодписанта Из ОписаниеРеквизитовПодписанта.Значение Цикл
			ПоддерживаемыеИдентификаторы.Добавить(ОписаниеРеквизитаПодписанта.Значение);
		КонецЦикла;
	КонецЦикла; 

	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПоддерживаемыеИдентификаторы);
	
КонецФункции

// Добавляет описание подписи
//
Процедура ДобавитьОписаниеПодписи(ОписаниеПодписей, ОписаниеИменРеквизитов, РольПодписанта = Неопределено, ИмяРеквизитаОрганизация = "Организация") Экспорт

	Если РольПодписанта = Неопределено Тогда
		РольПодписанта = ОписаниеИменРеквизитов.ФизическоеЛицо;
	КонецЕсли;
	
	// Удаляем существующие строки с этой ролью.
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Организация", ИмяРеквизитаОрганизация);
	СтруктураПоиска.Вставить("РольПодписанта", РольПодписанта);
	
	СтрокиКУдалению = ОписаниеПодписей.НайтиСтроки(СтруктураПоиска);
	Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
		ОписаниеПодписей.Удалить(УдаляемаяСтрока);
	КонецЦикла; 
	
	// Добавляем новую.
	
	НоваяСтрока = ОписаниеПодписей.Добавить();
	
	НоваяСтрока.Организация = ИмяРеквизитаОрганизация;
	НоваяСтрока.РольПодписанта = РольПодписанта;
	НоваяСтрока.ФизическоеЛицо = ОписаниеИменРеквизитов.ФизическоеЛицо;
	НоваяСтрока.Должность = ОписаниеИменРеквизитов.Должность;
	НоваяСтрока.ОснованиеПодписи = ОписаниеИменРеквизитов.ОснованиеПодписи;
	
КонецПроцедуры

// Возвращает соответствие с ролями подписантов структурами имен их реквизитов.
//
Функция ОписаниеИменПодписантовОбъекта(МассивРолей, ПереопределяемыеИменаРеквизитов = Неопределено)

	ОписаниеИменРеквизитов = Новый Соответствие;
	
	МассивИдентификаторов = ПредопределенныеИдентификаторыОписанийПодписей();
	ПредопределенныеОписания = СоответствиеИдентификаторовИзМассиваИдентификаторов(МассивИдентификаторов);
	
	ОписанияРолей = ОбщегоНазначения.СкопироватьРекурсивно(ПредопределенныеОписания);
	
	Для Каждого ИмяРоли Из МассивРолей Цикл
		ОписаниеИменРеквизитовРоли = ОписанияРолей.Получить(ИмяРоли);
		Если ОписаниеИменРеквизитовРоли = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПереопределяемыеИменаРеквизитов <> Неопределено Тогда
			ПереопределитьОписаниеПодписанта(ОписаниеИменРеквизитовРоли, ПереопределяемыеИменаРеквизитов.Получить(ИмяРоли));
		КонецЕсли;
		
		ОписаниеИменРеквизитов.Вставить(ИмяРоли, ОписаниеИменРеквизитовРоли);
	КонецЦикла; 
	
	Возврат ОписаниеИменРеквизитов;

КонецФункции

Функция СоответствиеИдентификаторовИзМассиваИдентификаторов(МассивИдентификаторов)

	СоответствиеИдентификаторов = Новый Соответствие;
	
	Для Каждого СоответствиеИдентификатор Из МассивИдентификаторов Цикл
		Для Каждого КлючИЗначение Из СоответствиеИдентификатор Цикл
			СоответствиеИдентификаторов.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла; 
	КонецЦикла; 
	
	Возврат СоответствиеИдентификаторов;

КонецФункции

Процедура ПереопределитьОписаниеПодписанта(ОписаниеИменРеквизитовРоли, ПереопределяемыеИменаРеквизитовРоли)

	Если ПереопределяемыеИменаРеквизитовРоли = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ОписаниеРеквизита Из ПереопределяемыеИменаРеквизитовРоли Цикл
		Если ОписаниеИменРеквизитовРоли.Свойство(ОписаниеРеквизита.Ключ) Тогда
			ОписаниеИменРеквизитовРоли[ОписаниеРеквизита.Ключ] = ОписаниеРеквизита.Значение;
		КонецЕсли;
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти 

#КонецОбласти
