#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	//Ограничение.Текст =
	//"РазрешитьЧтениеИзменение
	//|ГДЕ
	//|	// ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	//|	//) И 
	//|   ЗначениеРазрешено(Организация)";  
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетРезерва.Начисления КАК Т1
	|	ПО Т1.Ссылка = Т.Ссылка
	|
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Т.Организация)
	|	И (Т1.Подразделение ЕСТЬ NULL
	|		ИЛИ ДляВсехСтрок(
	|			ЗначениеРазрешено(Т1.Подразделение)
	|			ИЛИ ДляОднойИзСтрок(ЗначениеРазрешено(Т1.Подразделение))))";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти	

// Проводит документ по учетам. Если в параметре ВидыУчетов передано Неопределено, то документ проводится по всем учетам.
// Процедура вызывается из обработки проведения и может вызываться из вне.
// 
// Параметры:
//  ДокументСсылка	- ДокументСсылка.РасчетПоказателейБюджетовПрогнозов - Ссылка на документ
//  РежимПроведения - РежимПроведенияДокумента - Режим проведения документа (оперативный, неоперативный)
//  Отказ 			- Булево - Признак отказа от выполнения проведения
//  ВидыУчетов 		- Строка - Список видов учета, по которым необходимо провести документ. Если параметр пустой или Неопределено, то документ проведется по всем учетам
//  Движения 		- Коллекция движений документа - Передается только при вызове из обработки проведения документа
//  Объект			- ДокументОбъект.РасчетПоказателейБюджетовПрогнозов - Передается только при вызове из обработки проведения документа
//  ДополнительныеПараметры - Структура - Дополнительные параметры, необходимые для проведения документа.
//
Процедура ПровестиПоУчетам(ДокументСсылка, РежимПроведения, Отказ, ВидыУчетов = Неопределено, Движения = Неопределено, Объект = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СтруктураВидовУчета = ПроведениеРасширенныйСервер.СтруктураВидовУчета();
	ПроведениеРасширенныйСервер.ПодготовитьНаборыЗаписейКРегистрацииДвиженийПоВидамУчета(РежимПроведения, ДокументСсылка, СтруктураВидовУчета, ВидыУчетов, Движения, Объект, Отказ);
	
	// Предусмотрен режим проведения по отдельным физическим лицам.
	СписокФизическихЛиц = Неопределено;
	Если ДополнительныеПараметры <> Неопределено  
		И ДополнительныеПараметры.Свойство("ФизическиеЛица")
		И ДополнительныеПараметры.ФизическиеЛица.Количество() > 0 Тогда
		СписокФизическихЛиц = ДополнительныеПараметры.ФизическиеЛица
	КонецЕсли;
	
	РеквизитыДляПроведения = РеквизитыДляПроведения(ДокументСсылка);
	ДанныеДляПроведения = ДанныеДляПроведения(РеквизитыДляПроведения, РеквизитыДляПроведения.ПериодРегистрации, СписокФизическихЛиц, СтруктураВидовУчета);

	Если СтруктураВидовУчета.Начисления Тогда
		РасчетБюджетированиеРасширенный.СформироватьДвиженияРезервов(Движения, Отказ, РеквизитыДляПроведения.Организация, КонецМесяца(РеквизитыДляПроведения.ПериодРегистрации), ДанныеДляПроведения.Начисления, Истина);
	КонецЕсли;
	
	ПроведениеРасширенныйСервер.ЗаписьДвиженийПоУчетам(Движения, СтруктураВидовУчета);
	
КонецПроцедуры

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатЗаполнения = Новый Структура;
	
	// Получение данных для заполнения табличных частей документа.
	ОписаниеДокумента = СтруктураПараметров.ОписаниеДокумента;
	Организация = СтруктураПараметров.Организация;
	МесяцНачисления = СтруктураПараметров.МесяцНачисления;
	
	ДополнительныеПараметры = РасчетБюджетированиеРасширенный.ДополнительныеПараметрыЗаполненияТаблицДокумента();
	ДополнительныеПараметры.ДокументСсылка 				= СтруктураПараметров.ДокументСсылка;
	ДополнительныеПараметры.Подразделение 				= СтруктураПараметров.Подразделение;
	ДополнительныеПараметры.МестоВозникновенияЗатрат 	= СтруктураПараметров.МестоВозникновенияЗатрат;
	ДополнительныеПараметры.НачалоПериода 				= СтруктураПараметров.НачалоПериода;
	ДополнительныеПараметры.ОкончаниеПериода 			= СтруктураПараметров.ОкончаниеПериода;
	ДополнительныеПараметры.ВидРасчета 					= СтруктураПараметров.ВидРасчета; 
	ДополнительныеПараметры.ИсточникРасчета 			= СтруктураПараметров.ИсточникРасчета;
	ДополнительныеПараметры.Сценарий 					= СтруктураПараметров.Сценарий;
	
	ДанныеЗаполнения = РасчетБюджетированиеРасширенный.ДанныеДляЗаполненияТаблицДокумента(ОписаниеДокумента, Организация, МесяцНачисления, ДополнительныеПараметры);
	
	РезультатЗаполнения.Вставить("ДанныеДляЗаполненияТаблицДокумента", ДанныеЗаполнения);
	
	ПоместитьВоВременноеХранилище(РезультатЗаполнения, АдресХранилища);
	
КонецПроцедуры

Функция ДанныеДляПроведения(РеквизитыДляПроведения, МесяцНачисления, СписокФизическихЛиц, СтруктураВидовУчета)
	
	ДанныеДляПроведения = РасчетБюджетирование.СоздатьДанныеДляПроведенияНачисленияБюджетирования();
	
	ОстальныеВидыУчета = Ложь;
	Для Каждого КлючИЗначение Из СтруктураВидовУчета Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("Булево") 
			И КлючИЗначение.Значение Тогда 
			ОстальныеВидыУчета = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ОстальныеВидыУчета Тогда
		РасчетБюджетированиеРасширенный.ЗаполнитьНачисления(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка, "Начисления,Взносы", "Начисления.МесяцНачисления", "Начисления.Ссылка.ДатаНачала", "Начисления.Ссылка.ДатаОкончания", , СписокФизическихЛиц);
	Конецесли;	
		
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция РеквизитыДляПроведения(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетРезерва.Ссылка КАК Ссылка,
	|	РасчетРезерва.Ссылка.Сценарий КАК Сценарий,
	|	РасчетРезерва.Дата КАК Дата,
	|	РасчетРезерва.МесяцНачисления КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА РасчетРезерва.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДокументовБюджетирования.Утвержден)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Утвержден,
	|	НАЧАЛОПЕРИОДА(РасчетРезерва.ДатаНачала, МЕСЯЦ) КАК МесяцНачала,
	|	КОНЕЦПЕРИОДА(РасчетРезерва.ДатаОкончания, МЕСЯЦ) КАК МесяцОкончания,
	|	РасчетРезерва.Организация КАК Организация,
	|	РасчетРезерва.Подразделение КАК Подразделение,
	|	РасчетРезерва.МестоВозникновенияЗатрат КАК МестоВозникновенияЗатрат
	|ИЗ
	|	Документ.РасчетРезерва КАК РасчетРезерва
	|ГДЕ
	|	РасчетРезерва.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧНачисления.МесяцНачисления КАК МесяцНачисления,
	|	ТЧНачисления.Подразделение КАК Подразделение,
	|	ТЧНачисления.МестоВозникновенияЗатрат КАК МестоВозникновенияЗатрат,
	|	ТЧНачисления.Ссылка.ДатаНачала КАК НачалоПериода,
	|	ТЧНачисления.Ссылка.ДатаОкончания КАК ОкончаниеПериода,
	|	ТЧНачисления.ВидНачисления КАК ВидНачисления,
	|	ЗНАЧЕНИЕ(Справочник.ВидыВнебюджетныхФондов.ПустаяСсылка) КАК ВидВнебюджетногоФонда,
	|	ЗНАЧЕНИЕ(Справочник.ВидыНачислений.ПустаяСсылка) КАК ТипНалога,
	|	ТЧНачисления.СпособОтраженияРезультата КАК СпособОтраженияРезультата,
	|	ТЧНачисления.Результат КАК Сумма
	|ИЗ
	|	Документ.РасчетРезерва.Начисления КАК ТЧНачисления
	|ГДЕ
	|	ТЧНачисления.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВзносы.МесяцНачисления,
	|	ТЧВзносы.Подразделение,
	|	ТЧВзносы.МестоВозникновенияЗатрат,
	|	ТЧВзносы.Ссылка.ДатаНачала,
	|	ТЧВзносы.Ссылка.ДатаОкончания,
	|	ЗНАЧЕНИЕ(Справочник.ВидыНачислений.ПустаяСсылка),
	|	ТЧВзносы.ВидВнебюджетногоФонда,
	|	ТЧВзносы.ТипНалога,
	|	ТЧВзносы.СпособОтраженияРезультата,
	|	ТЧВзносы.Результат
	|ИЗ
	|	Документ.РасчетРезерва.Взносы КАК ТЧВзносы
	|ГДЕ
	|	ТЧВзносы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результаты = Запрос.ВыполнитьПакет();
	
	РеквизитыДляПроведения = РеквизитыДляПроведенияПустаяСтруктура();
	
	ВыборкаРеквизиты = Результаты[0].Выбрать();
	
	Пока ВыборкаРеквизиты.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(РеквизитыДляПроведения, ВыборкаРеквизиты);
	КонецЦикла;
	
	НачисленияВзносы = Результаты[1].Выгрузить();
	РеквизитыДляПроведения.НачисленияВзносы = НачисленияВзносы;
	
	Возврат РеквизитыДляПроведения;
	
КонецФункции

Функция РеквизитыДляПроведенияПустаяСтруктура()
	
	РеквизитыДляПроведенияПустаяСтруктура = Новый Структура("Ссылка, Сценарий, Дата, ПериодРегистрации, МесяцНачала, МесяцОкончания, Утвержден, Организация, Подразделение, МестоВозникновенияЗатрат, НачисленияВзносы");	
	
	Возврат РеквизитыДляПроведенияПустаяСтруктура;
	
КонецФункции

Функция РазложитьПолноеИмяОбъекта(ПолноеИмяОбъекта) Экспорт
	Результат = СтрРазделить(ПолноеИмяОбъекта, ".", Ложь);
	
	ИмяОбъекта = Новый Структура;
	ИмяОбъекта.Вставить("ПолноеИмяОбъекта", ПолноеИмяОбъекта);
	ИмяОбъекта.Вставить("ТипОбъекта");
	ИмяОбъекта.Вставить("НазваниеОбъекта");
	ИмяОбъекта.Вставить("ИмяТабличнойЧасти");
	
	Если Результат.Количество() = 2 Тогда
		Если Результат[0] = "Документ" ИЛИ Результат[0] = "Справочник" ИЛИ Результат[0] = "БизнесПроцесс" 
			ИЛИ Результат[0] = "Перечисление" ИЛИ Результат[0] = "ПланВидовХарактеристик"
			ИЛИ Результат[0] = "ПланСчетов" Тогда
				ИмяОбъекта.ТипОбъекта = Результат[0];
				ИмяОбъекта.НазваниеОбъекта = Результат[1];
		Иначе
				ИмяОбъекта.ТипОбъекта = ОпределитьТипОбъектаМетаданныхПоИмени(Результат[0]);
				ИмяОбъекта.НазваниеОбъекта = Результат[0];
				ИмяОбъекта.ИмяТабличнойЧасти = Результат[1];
		КонецЕсли;
	ИначеЕсли Результат.Количество() = 3 Тогда
		ИмяОбъекта.ТипОбъекта = Результат[0];
		ИмяОбъекта.НазваниеОбъекта = Результат[1];
		ИмяОбъекта.ИмяТабличнойЧасти = Результат[2];
	ИначеЕсли Результат.Количество() = 4 Тогда 
		ИмяОбъекта.ТипОбъекта = Результат[0];
		ИмяОбъекта.НазваниеОбъекта = Результат[1];
		ИмяОбъекта.ИмяТабличнойЧасти = Результат[3];
	ИначеЕсли Результат.Количество() = 1 Тогда
		ИмяОбъекта.ТипОбъекта = ОпределитьТипОбъектаМетаданныхПоИмени(Результат[0]);
		ИмяОбъекта.НазваниеОбъекта = Результат[0];
	КонецЕсли;

	Возврат ИмяОбъекта;
	
КонецФункции

Функция ОпределитьТипОбъектаМетаданныхПоИмени(Имя)
	Для каждого Объект Из Метаданные.Справочники Цикл 
		Если Объект.Имя = Имя Тогда 
			Возврат "Справочник";
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Объект Из Метаданные.Документы Цикл 
		Если Объект.Имя = Имя Тогда 
			Возврат "Документ";
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти	
	
#КонецЕсли	