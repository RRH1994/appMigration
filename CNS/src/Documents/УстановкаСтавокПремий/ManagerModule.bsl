#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	//Ограничение.Текст =
	//"РазрешитьЧтениеИзменение
	//|ГДЕ
	//|	// ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	//|	//) И 
	//|   ЗначениеРазрешено(Организация)";   
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаСтавокПремий КАК Т1
	|	ПО Т1.Ссылка = Т.Ссылка
	|
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	| Истина";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти	
	
#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьСтруктуруУстановкиСтавки() Экспорт
	
	Возврат Новый Структура(
		"Сценарий, ВидНачисления, Грейд, КодГрейда, Ставка, Дата"); 

КонецФункции // ПолучитьСтруктуруУстановкиСтавки()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура УстановитьСтавку(СтруктураСтавок) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);	
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.ПометкаУдаления КАК ПометкаУдаления,
	|	Т.Проведен КАК Проведен
	|ИЗ
	|	Документ.УстановкаСтавокПремий КАК Т
	|ГДЕ
	|	&ТекстУсловия";
	
	ТекстУсловия = "ИСТИНА";
	
	Для Каждого КлючЗначение Из СтруктураСтавок Цикл
		
		Если КлючЗначение.Ключ = "Ставка" Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстУсловия = ТекстУсловия + " И " + "Т." + КлючЗначение.Ключ + " = &" + КлючЗначение.Ключ;
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		
	КонецЦикла;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловия", ТекстУсловия);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.ПометкаУдаления = Ложь;
		КонецЕсли;
	Иначе
		ДокументОбъект = Документы.УстановкаСтавокПремий.СоздатьДокумент();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, СтруктураСтавок);
	
	Если ДокументОбъект.Ставка = 0 Тогда
		Если ДокументОбъект.Проведен Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		ДокументОбъект.ПометкаУдаления = Истина;
		ДокументОбъект.Записать();
	Иначе
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры // УстановитьСтавку()

Функция ПолучитьЗапросПоДокументамУстановкаСтавок(Сценарий, НачалоПериода, ОкончаниеПериода, ВидНачисления = Неопределено, Грейд = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);	
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	УстановкаСтавокПремий.Ссылка КАК Ссылка,
	|	УстановкаСтавокПремий.ПометкаУдаления КАК ПометкаУдаления,
	|	УстановкаСтавокПремий.Номер КАК Номер,
	|	УстановкаСтавокПремий.Дата КАК Дата,
	|	УстановкаСтавокПремий.Проведен КАК Проведен,
	|	УстановкаСтавокПремий.Сценарий КАК Сценарий,
	|	УстановкаСтавокПремий.ВидНачисления КАК ВидНачисления,
	|	УстановкаСтавокПремий.Грейд КАК Грейд,
	|	УстановкаСтавокПремий.КодГрейда КАК КодГрейда,
	|	УстановкаСтавокПремий.Ставка КАК Ставка
	|ИЗ
	|	Документ.УстановкаСтавокПремий КАК УстановкаСтавокПремий
	|ГДЕ
	|	УстановкаСтавокПремий.Проведен
	|	И УстановкаСтавокПремий.Сценарий = &Сценарий
	|	И УстановкаСтавокПремий.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И (&ПоВсемВидамНачислений
	|			ИЛИ УстановкаСтавокПремий.ВидНачисления = &ВидНачисления)
	|	И (&ПоВсемГрейдам
	|			ИЛИ УстановкаСтавокПремий.Грейд = &Грейд)";
	
	Запрос.УстановитьПараметр("Сценарий", 				Сценарий);
	Запрос.УстановитьПараметр("НачалоПериода", 			НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", 		ОкончаниеПериода);
	Запрос.УстановитьПараметр("ВидНачисления", 			ВидНачисления);
	Запрос.УстановитьПараметр("ПоВсемВидамНачислений", 	Не ЗначениеЗаполнено(ВидНачисления));
	Запрос.УстановитьПараметр("Грейд", 					Грейд);
	Запрос.УстановитьПараметр("ПоВсемГрейдам", 			Не ЗначениеЗаполнено(Грейд));
	
	Возврат Запрос;
	
КонецФункции	

Процедура УдалитьСтавки(Сценарий, НачалоПериода, ОкончаниеПериода, ВидНачисления = Неопределено, Грейд = Неопределено) Экспорт
	
	Запрос 	= ПолучитьЗапросПоДокументамУстановкаСтавок(Сценарий, НачалоПериода, ОкончаниеПериода, ВидНачисления, Грейд);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект 					= Выборка.Ссылка.ПолучитьОбъект();
		ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ДокОбъект.ПометкаУдаления 	= Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;	
	
КонецПроцедуры	

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура СкопироватьСтавкиПоСценарию(СценарийИсточник, СценарийПриемник, НачалоПериода, ОкончаниеПериода, ВидНачисления = Неопределено, Грейд = Неопределено) Экспорт

	Запрос 	= ПолучитьЗапросПоДокументамУстановкаСтавок(СценарийИсточник, НачалоПериода, ОкончаниеПериода, ВидНачисления, Грейд);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураСтавок = ПолучитьСтруктуруУстановкиСтавки();
		ЗаполнитьЗначенияСвойств(СтруктураСтавок, Выборка);
		
		СтруктураСтавок.Вставить("Сценарий", СценарийПриемник);
		
		УстановитьСтавку(СтруктураСтавок);
		
	КонецЦикла;	

КонецПроцедуры // СкопироватьСтавки()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура СкопироватьСтавкиПоГоду(Сценарий, НачалоГодаИсточник, НачалоГодаПриемник, ВидНачисления = Неопределено, Грейд = Неопределено) Экспорт

	Запрос 	= ПолучитьЗапросПоДокументамУстановкаСтавок(Сценарий, НачалоГода(НачалоГодаИсточник), КонецГода(НачалоГодаИсточник), ВидНачисления, Грейд);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураСтавок = ПолучитьСтруктуруУстановкиСтавки();
		ЗаполнитьЗначенияСвойств(СтруктураСтавок, Выборка);
		
		СтруктураСтавок.Вставить("Дата", НачалоГодаПриемник);
		
		УстановитьСтавку(СтруктураСтавок);
		
	КонецЦикла;	

КонецПроцедуры // СкопироватьСтавки()

#КонецОбласти	
	
#КонецЕсли




